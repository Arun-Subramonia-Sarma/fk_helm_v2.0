{{- if eq .Values.workload.type "deployment" }}
{{- if .Values.workload.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.workload.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generic-chart.selectorLabels" . | nindent 6 }}
  {{- with .Values.workload.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.workload.deployment.revisionHistoryLimit }}
  template:
    {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" (dict)) | nindent 4 }}
{{- end }}
{{- end }}

---
{{- if eq .Values.workload.type "statefulset" }}
{{- if .Values.workload.statefulset.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.workload.statefulset.replicas }}
  selector:
    matchLabels:
      {{- include "generic-chart.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.workload.statefulset.serviceName | default (include "generic-chart.fullname" .) }}
  podManagementPolicy: {{ .Values.workload.statefulset.podManagementPolicy }}
  {{- with .Values.workload.statefulset.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" (dict)) | nindent 4 }}
  {{- with .Values.workload.statefulset.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml . | nindent 2 }}
  {{- end }}
{{- end }}
{{- end }}

---
{{- if eq .Values.workload.type "daemonset" }}
{{- if .Values.workload.daemonset.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "generic-chart.selectorLabels" . | nindent 6 }}
  {{- with .Values.workload.daemonset.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" (dict)) | nindent 4 }}
{{- end }}
{{- end }}

---
{{- if eq .Values.workload.type "job" }}
{{- if .Values.workload.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  {{- with .Values.workload.job.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  {{- with .Values.workload.job.completions }}
  completions: {{ . }}
  {{- end }}
  {{- with .Values.workload.job.parallelism }}
  parallelism: {{ . }}
  {{- end }}
  {{- with .Values.workload.job.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ . }}
  {{- end }}
  {{- with .Values.workload.job.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  template:
    {{- $jobPodConfig := dict "restartPolicy" .Values.workload.job.restartPolicy }}
    {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" $jobPodConfig) | nindent 4 }}
{{- end }}
{{- end }}

---
{{- if eq .Values.workload.type "cronjob" }}
{{- if .Values.workload.cronjob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.workload.cronjob.schedule | quote }}
  concurrencyPolicy: {{ .Values.workload.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.workload.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.workload.cronjob.successfulJobsHistoryLimit }}
  {{- with .Values.workload.cronjob.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ . }}
  {{- end }}
  suspend: {{ .Values.workload.cronjob.suspend }}
  jobTemplate:
    spec:
      {{- with .Values.workload.cronjob.jobTemplate.backoffLimit }}
      backoffLimit: {{ . }}
      {{- end }}
      {{- with .Values.workload.cronjob.jobTemplate.completions }}
      completions: {{ . }}
      {{- end }}
      {{- with .Values.workload.cronjob.jobTemplate.parallelism }}
      parallelism: {{ . }}
      {{- end }}
      {{- with .Values.workload.cronjob.jobTemplate.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ . }}
      {{- end }}
      {{- with .Values.workload.cronjob.jobTemplate.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ . }}
      {{- end }}
      template:
        {{- $cronJobPodConfig := dict "restartPolicy" .Values.workload.cronjob.jobTemplate.restartPolicy }}
        {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" $cronJobPodConfig) | nindent 8 }}
{{- end }}
{{- end }}

---
{{- if eq .Values.workload.type "rollout" }}
{{- if .Values.workload.rollout.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "generic-chart.fullname" . }}
  labels:
    {{- include "generic-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.workload.rollout.replicas }}
  selector:
    matchLabels:
      {{- include "generic-chart.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.workload.rollout.revisionHistoryLimit }}
  {{- with .Values.workload.rollout.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    {{- include "generic-chart.podTemplate" (dict "globalConfig" . "podConfig" (dict)) | nindent 4 }}
{{- end }}
{{- end }}